

#lang parsers/lambda_plus/parser;;

#import bootstrap/lists, bootstrap/maps;;

[ABS
  [CONS                                  // VisitTree = [CAR *REF*] (
    [APP [ABS [APP [REF 1] [REF 1]]]     //     OMEGA
    [ABS                                 //     Self        = 4
    [ABS                                 //     FunctionMap = 3
    [ABS                                 //     IsLeaf      = 2
    [ABS                                 //     Tree        = 1):
      [APP [APP 
          [APP [REF 2] [CAR [REF 1]]]    //   If IsLeaf(tree[0]): 
                                         //   Then: FunctionMap[Tree[0]](Tree[1])
        [APP                             //     Apply:
          [APP [APP [APP                 //       MapGet(
              [CAR [CDR 
                [CAR [CDR [REF 5]]]]]   
            [REF 3]]                     //         FunctionMap,
            [CAR [REF 1]]]               //         Tree[0],
            NULL]                        //         NULL),
          [CAR [CDR [REF 1]]]            //     To: Tree[1]
        ]
      ]                                  //   Else: FunctionMap[Tree[0]](Map(Self, Tree[1]))
        [APP                             //     Apply:
          [APP [APP [APP                 //       MapGet(
              [CAR [CDR 
                [CAR [CDR [REF 5]]]]]        
            [REF 3]]                     //         FunctionMap,
            [CAR [REF 1]]]               //         Tree[0],
            NULL]                        //         NULL),
          [APP [APP                      //     To: Map(Self, Tree[1])
            [CAR [CAR [REF 5]]]          //       Map(
            [APP [APP [APP [REF 4]       //         Self(
                [REF 4]]                 //           Self,
                [REF 3]]                 //           FunctionMap,
                [REF 2]]                 //           IsLeaf),
          ]
            [CAR [CDR [REF 1]]]
          ]
        ]
      ]
    ]]]]]
  NULL]
]